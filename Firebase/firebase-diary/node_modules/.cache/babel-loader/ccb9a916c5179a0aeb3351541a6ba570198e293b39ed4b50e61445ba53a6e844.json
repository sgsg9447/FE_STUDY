{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport { collection, addDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { appFireStore, timeStamp } from \"../firebase/config\";\nconst initState = {\n  document: null,\n  isPending: false,\n  error: null,\n  success: false\n};\nconst storeReducer = (state, action) => {\n  switch (action.type) {\n    // isPending,addDoc,error\n    case \"isPending\":\n      return {\n        isPending: true,\n        document: null,\n        success: false,\n        error: null\n      };\n    case \"addDoc\":\n      return {\n        isPending: false,\n        document: action.payload,\n        success: true,\n        error: null\n      };\n    case \"deleteDoc\":\n      return {\n        isPending: false,\n        document: action.payload,\n        success: true,\n        error: null\n      };\n    case \"error\":\n      return {\n        isPending: false,\n        document: null,\n        success: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// 저장할 컬랙션을 인자로 전달함\nexport const useFirestore = transaction => {\n  _s();\n  const [response, dispatch] = useReducer(storeReducer, initState);\n  //colRef : 컬랙션의 참조를 요구함\n  const colRef = collection(appFireStore, transaction);\n\n  //컬랙션에 문서를 추가함 doc 전달할 데이터가 addDoc의 전달할 인자로 들어감!\n  const addDocument = async doc => {\n    dispatch({\n      type: \"isPending\"\n    });\n    try {\n      const createdTime = timeStamp.fromDate(new Date());\n      const docRef = await addDoc(colRef, {\n        ...doc,\n        createdTime\n      });\n      console.log(docRef);\n      dispatch({\n        type: \"addDoc\",\n        payload: docRef\n      });\n    } catch (error) {\n      dispatch({\n        type: \"error\",\n        payload: error.message\n      });\n    }\n  };\n  //컬랙션에서 문서를 제거함\n  const deleteDocument = async id => {\n    dispatch({\n      type: \"isPending\"\n    });\n    try {\n      const docRef = await deleteDoc(doc(colRef, id));\n      dispatch({\n        type: \"deleteDoc\",\n        payload: docRef\n      });\n    } catch (error) {\n      dispatch({\n        type: \"error\",\n        payload: error.message\n      });\n    }\n  };\n  return {\n    addDocument,\n    deleteDocument,\n    response\n  };\n};\n_s(useFirestore, \"FJlO/IlSBIpknWe8oU06phW1SLM=\");","map":{"version":3,"names":["useReducer","collection","addDoc","deleteDoc","doc","appFireStore","timeStamp","initState","document","isPending","error","success","storeReducer","state","action","type","payload","useFirestore","transaction","_s","response","dispatch","colRef","addDocument","createdTime","fromDate","Date","docRef","console","log","message","deleteDocument","id"],"sources":["/Users/sseul/Desktop/my-diary2/src/hooks/useFirestore.js"],"sourcesContent":["import { useReducer } from \"react\";\nimport { collection, addDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { appFireStore, timeStamp } from \"../firebase/config\";\nconst initState = {\n  document: null,\n  isPending: false,\n  error: null,\n  success: false,\n};\n\nconst storeReducer = (state, action) => {\n  switch (action.type) {\n    // isPending,addDoc,error\n    case \"isPending\":\n      return { isPending: true, document: null, success: false, error: null };\n    case \"addDoc\":\n      return {\n        isPending: false,\n        document: action.payload,\n        success: true,\n        error: null,\n      };\n    case \"deleteDoc\":\n      return {\n        isPending: false,\n        document: action.payload,\n        success: true,\n        error: null,\n      };\n    case \"error\":\n      return {\n        isPending: false,\n        document: null,\n        success: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\n// 저장할 컬랙션을 인자로 전달함\nexport const useFirestore = (transaction) => {\n  const [response, dispatch] = useReducer(storeReducer, initState);\n  //colRef : 컬랙션의 참조를 요구함\n  const colRef = collection(appFireStore, transaction);\n\n  //컬랙션에 문서를 추가함 doc 전달할 데이터가 addDoc의 전달할 인자로 들어감!\n  const addDocument = async (doc) => {\n    dispatch({ type: \"isPending\" });\n    try {\n      const createdTime = timeStamp.fromDate(new Date());\n      const docRef = await addDoc(colRef, { ...doc, createdTime });\n      console.log(docRef);\n      dispatch({ type: \"addDoc\", payload: docRef });\n    } catch (error) {\n      dispatch({ type: \"error\", payload: error.message });\n    }\n  };\n  //컬랙션에서 문서를 제거함\n  const deleteDocument = async (id) => {\n    dispatch({ type: \"isPending\" });\n    try {\n      const docRef = await deleteDoc(doc(colRef,id));\n      dispatch({ type: \"deleteDoc\", payload: docRef });\n    } catch (error) {\n      dispatch({ type: \"error\", payload: error.message });\n    }\n  };\n  return { addDocument, deleteDocument, response };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}