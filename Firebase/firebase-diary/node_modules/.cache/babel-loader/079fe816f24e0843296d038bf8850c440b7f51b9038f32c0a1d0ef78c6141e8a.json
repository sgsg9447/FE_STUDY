{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { appAuth } from \"../firebase/config\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const useSignup = () => {\n  _s();\n  //에러 정보 저장\n  const [error, setError] = useState(null);\n  //통신상태 저장\n  const [isPending, setIsPending] = useState(false);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = (email, password, displayName) => {\n    setError(null); //아직 에러없기때문에\n    setIsPending(true); //통신을 진행중\n    createUserWithEmailAndPassword(appAuth, email, password).then(userCredential => {\n      const user = userCredential.user;\n      console.log(user);\n      if (!user) {\n        throw new Error(\"회원가입에 실했습니다.\");\n      }\n      updateProfile(appAuth.currentUser, {\n        displayName\n      }).then(() => {\n        dispatch({\n          type: \"login\",\n          payload: user\n        });\n        setError(null);\n        setIsPending(false);\n      }).catch(err => {\n        setError(err.message);\n        setIsPending(false);\n      });\n    }).catch(err => {\n      setError(err.message);\n      setIsPending(false);\n    });\n  };\n  return {\n    error,\n    isPending,\n    signup\n  };\n};\n_s(useSignup, \"3CG1RIu6twumuLiIXN29/q7Db+4=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","createUserWithEmailAndPassword","updateProfile","appAuth","useAuthContext","useSignup","_s","error","setError","isPending","setIsPending","dispatch","signup","email","password","displayName","then","userCredential","user","console","log","Error","currentUser","type","payload","catch","err","message"],"sources":["/Users/sseul/Desktop/my-diary2/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from \"react\";\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { appAuth } from \"../firebase/config\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const useSignup = () => {\n  //에러 정보 저장\n  const [error, setError] = useState(null);\n  //통신상태 저장\n  const [isPending, setIsPending] = useState(false);\n  const { dispatch } = useAuthContext();\n\n  const signup = (email, password, displayName) => {\n    setError(null); //아직 에러없기때문에\n    setIsPending(true); //통신을 진행중\n    createUserWithEmailAndPassword(appAuth, email, password)\n      .then((userCredential) => {\n        const user = userCredential.user;\n        console.log(user);\n\n        if (!user) {\n          throw new Error(\"회원가입에 실했습니다.\");\n        }\n        updateProfile(appAuth.currentUser, { displayName })\n          .then(() => {\n            dispatch({ type: \"login\", payload: user });\n            setError(null);\n            setIsPending(false);\n          })\n          .catch((err) => {\n            setError(err.message);\n            setIsPending(false);\n          });\n      })\n      .catch((err) => {\n        setError(err.message);\n        setIsPending(false);\n      });\n  };\n  return { error, isPending, signup };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,8BAA8B,EAAEC,aAAa,QAAQ,eAAe;AAC7E,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC;EACA,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEW;EAAS,CAAC,GAAGP,cAAc,EAAE;EAErC,MAAMQ,MAAM,GAAGA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,WAAW,KAAK;IAC/CP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAChBE,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACpBT,8BAA8B,CAACE,OAAO,EAAEU,KAAK,EAAEC,QAAQ,CAAC,CACrDE,IAAI,CAAEC,cAAc,IAAK;MACxB,MAAMC,IAAI,GAAGD,cAAc,CAACC,IAAI;MAChCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAEjB,IAAI,CAACA,IAAI,EAAE;QACT,MAAM,IAAIG,KAAK,CAAC,cAAc,CAAC;MACjC;MACAnB,aAAa,CAACC,OAAO,CAACmB,WAAW,EAAE;QAAEP;MAAY,CAAC,CAAC,CAChDC,IAAI,CAAC,MAAM;QACVL,QAAQ,CAAC;UAAEY,IAAI,EAAE,OAAO;UAAEC,OAAO,EAAEN;QAAK,CAAC,CAAC;QAC1CV,QAAQ,CAAC,IAAI,CAAC;QACdE,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,CACDe,KAAK,CAAEC,GAAG,IAAK;QACdlB,QAAQ,CAACkB,GAAG,CAACC,OAAO,CAAC;QACrBjB,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC;IACN,CAAC,CAAC,CACDe,KAAK,CAAEC,GAAG,IAAK;MACdlB,QAAQ,CAACkB,GAAG,CAACC,OAAO,CAAC;MACrBjB,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EACD,OAAO;IAAEH,KAAK;IAAEE,SAAS;IAAEG;EAAO,CAAC;AACrC,CAAC;AAACN,EAAA,CAnCWD,SAAS;EAAA,QAKCD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}