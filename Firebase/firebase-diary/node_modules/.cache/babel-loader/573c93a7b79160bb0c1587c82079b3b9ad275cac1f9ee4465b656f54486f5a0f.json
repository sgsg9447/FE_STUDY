{"ast":null,"code":"var _s = $RefreshSig$();\nimport { collection, onSnapshot, orderBy, query, where } from \"firebase/firestore\";\nimport { useEffect, useState } from \"react\";\nimport { appFireStore } from \"../firebase/config\";\nexport const useCollection = (transaction, myQuery) => {\n  _s();\n  const [documents, setDocuments] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    let q;\n    if (myQuery) {\n      q = query(collection(appFireStore, transaction), where(...myQuery), orderBy(\"createdTime\", \"desc\"));\n    }\n    const unsubscribe = onSnapshot(myQuery ? q : collection(appFireStore, transaction), snapshot => {\n      let result = [];\n      snapshot.docs.forEach(doc => {\n        result.push({\n          ...doc.data(),\n          id: doc.id\n        });\n      });\n      setDocuments(result);\n      setError(null);\n    }, error => {\n      setError(error.message);\n    });\n    return unsubscribe;\n  }, [collection]);\n  return {\n    documents,\n    error\n  };\n};\n_s(useCollection, \"j86V0YDN8yJdoPQs/2hLiWCj9Cg=\");","map":{"version":3,"names":["collection","onSnapshot","orderBy","query","where","useEffect","useState","appFireStore","useCollection","transaction","myQuery","_s","documents","setDocuments","error","setError","q","unsubscribe","snapshot","result","docs","forEach","doc","push","data","id","message"],"sources":["/Users/sseul/Desktop/my-diary2/src/hooks/useCollection.js"],"sourcesContent":["import {\n  collection,\n  onSnapshot,\n  orderBy,\n  query,\n  where,\n} from \"firebase/firestore\";\nimport { useEffect, useState } from \"react\";\nimport { appFireStore } from \"../firebase/config\";\n\nexport const useCollection = (transaction, myQuery) => {\n  const [documents, setDocuments] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    let q;\n    if (myQuery) {\n      q = query(\n        collection(appFireStore, transaction),\n        where(...myQuery),\n        orderBy(\"createdTime\", \"desc\")\n      );\n    }\n    const unsubscribe = onSnapshot(\n      myQuery ? q : collection(appFireStore, transaction),\n      (snapshot) => {\n        let result = [];\n        snapshot.docs.forEach((doc) => {\n          result.push({ ...doc.data(), id: doc.id });\n        });\n        setDocuments(result);\n        setError(null);\n      },\n      (error) => {\n        setError(error.message);\n      }\n    );\n\n    return unsubscribe;\n  }, [collection]);\n\n  return { documents, error };\n};\n"],"mappings":";AAAA,SACEA,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,KAAK,EACLC,KAAK,QACA,oBAAoB;AAC3B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,oBAAoB;AAEjD,OAAO,MAAMC,aAAa,GAAGA,CAACC,WAAW,EAAEC,OAAO,KAAK;EAAAC,EAAA;EACrD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxCD,SAAS,CAAC,MAAM;IACd,IAAIW,CAAC;IACL,IAAIN,OAAO,EAAE;MACXM,CAAC,GAAGb,KAAK,CACPH,UAAU,CAACO,YAAY,EAAEE,WAAW,CAAC,EACrCL,KAAK,CAAC,GAAGM,OAAO,CAAC,EACjBR,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,CAC/B;IACH;IACA,MAAMe,WAAW,GAAGhB,UAAU,CAC5BS,OAAO,GAAGM,CAAC,GAAGhB,UAAU,CAACO,YAAY,EAAEE,WAAW,CAAC,EAClDS,QAAQ,IAAK;MACZ,IAAIC,MAAM,GAAG,EAAE;MACfD,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAEC,GAAG,IAAK;QAC7BH,MAAM,CAACI,IAAI,CAAC;UAAE,GAAGD,GAAG,CAACE,IAAI,EAAE;UAAEC,EAAE,EAAEH,GAAG,CAACG;QAAG,CAAC,CAAC;MAC5C,CAAC,CAAC;MACFZ,YAAY,CAACM,MAAM,CAAC;MACpBJ,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EACAD,KAAK,IAAK;MACTC,QAAQ,CAACD,KAAK,CAACY,OAAO,CAAC;IACzB,CAAC,CACF;IAED,OAAOT,WAAW;EACpB,CAAC,EAAE,CAACjB,UAAU,CAAC,CAAC;EAEhB,OAAO;IAAEY,SAAS;IAAEE;EAAM,CAAC;AAC7B,CAAC;AAACH,EAAA,CA/BWH,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}