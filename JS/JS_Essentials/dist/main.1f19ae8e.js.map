{"version":3,"sources":["getRandom.js","main.js"],"names":["random","Math","floor","user","name","age","console","log","All"],"mappings":";;ACCA;;;;;;ADDA,ACAA;ADCA,ACCA;ADAA,ACCA;ADCO,ACAPM,OAAO,CAACC,CDAQP,ECAhB,CAAYQ,GDAL,ACAP,GDAyB,ACEzB;AAEA,EDHE,OAAOP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,EAA3B,CAAP;AACD,ACGD;AACA;ADFO,ACGP,IDHaG,IAAI,GAAG;ACKpB,EDJEC,IAAI,EAAE,OADY;ACOpB,EDLEC,GAAG,EAAE;AAFa,ACQpfile":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["// export default function random(){\n//     return Math.floor(Math.random()*10)\n// }\n\nexport function random() {\n  return Math.floor(Math.random() * 10);\n}\n\nexport const user = {\n  name: \"Sseul\",\n  age: 299,\n};\n\n","// import { random, user as sseul } from \"./getRandom\";\nimport * as All from \"./getRandom\";\n// console.log(random());\n// console.log(sseul);\nconsole.log(All);\n\n// // // 산술 연산자\n\n// // console.log(1 + 2);\n// // console.log(5 - 7);\n// // console.log(3 * 4);\n// // console.log(10 / 2);\n\n// // // 할당 연산자\n\n// // let a = 2;\n// // // a = a + 1;\n// // a += 1;\n\n// // console.log(a);\n\n// // // 비교 연산자\n\n// // const a = 1;\n// // const b = 3;\n\n// // console.log(a !== b);\n\n// // console.log(a === b);\n\n// // function isEqual(x, y) {\n// //   return x === y;\n// // }\n\n// // console.log(isEqual(1, 1));\n// // console.log(isEqual(2, \"2\"));\n\n// // const c = 1;\n// // const d = 7;\n// // console.log(c < d);\n\n// // // 논리 연산자\n// // const a = 1 === 1;\n// // const b = \"AB\" === \"AB\";\n// // const c = true;\n// // console.log(a);\n// // console.log(b);\n// // console.log(c);\n\n// // console.log('&&: ',a && b && c); /*그리고 and*/\n// // console.log('||: ',a || b && c); /*또는 or*/\n// // console.log('!: ', !a); /*부정 not*/\n\n// // 삼항 연산자\n// const a = 1 < 2\n\n// if(a){\n//     console.log('참')\n// }else{\n//     console.log('거짓')\n// }\n\n// console.log(a ? '참': '거짓')\n\n// console.log(random());\n\n// const a = random();\n\n// switch (a) {\n//   case 0:\n//     console.log(\"a is 0\");\n//     break;\n//   case 2:\n//     console.log(\"a is 2\");\n//     break;\n//   case 4:\n//     console.log(\"rest...\");\n//     break;\n//   default:\n//     console.log(\"rest...\");\n// }\n\n// if (a === 0) {\n//   console.log(\"a is 0\");\n// } else if (a == 2) {\n//   console.log(\"a is 2\");\n// } else {\n//   console.log(\"rest...\");\n// }\n\n// //반복문\n// //for (시작조건; 종료조건; 변화조건){}\n\n// const ulEl = document.querySelector(\"ul\");\n\n// for (let i = 0; i < 3; i += 1) {\n//   const li = document.createElement(\"li\");\n//   li.textContent = `list -${i + 1}`;\n//   li.addEventListener(\"click\", function () {\n//     console.log(li.textContent);\n//   });\n//   ulEl.appendChild(li);\n// }\n\n// //형 변환\n\n// const a = 1;\n// const b = \"1\";\n\n// console.log(a == b);\n\n// //Truthy(참 같은 값)\n// // true, {}, [], 1, 2, 'false', -12, '3.14', ...\n\n// //Falsy(거짓 같은 값)\n// // false, '', null, undefined, 0, -0, NaN\n\n// if ('false') {\n//   console.log(123);\n// }\n\n// 함수 복습\n// function sum(x, y) {\n//   return x + y;\n// }\n\n// const sum = function (x, y) {\n//   return x + y;\n// };\n\n// const a = sum(1, 3);\n// const b = sum(4, 12);\n\n// console.log(a + b);\n\n// //화살표 함수\n// // () =>{} vs function(){}\n\n// const double = function (x) {\n//   return x * 2;\n// };\n\n// console.log(\"double: \", double(7));\n\n// const doubleArrow = (x) => {\n//   return x * 2;\n// };\n// const doubleArrow2 = (x) => x * 2;\n// ;\n\n// console.log(\"doubleArrow\", doubleArrow(7));\n// console.log(\"doubleArrow2\", doubleArrow2(7));\n\n// //즉시실행함수\n// //IIFE, Immediately-Invoked Function Expression\n\n// const a = 7;\n// // function double() {\n// //   console.log(a * 2);\n// // }\n// // double();\n\n// (function () {\n//   console.log(a * 2);\n// })();\n\n// (function () {\n//   console.log(a * 2);\n// })();\n\n//호이스팅\n//함수 선언부가 유효범위 최상단으로 끌어올려지는 현상\n\n// const a = 7;\n// double();\n\n// function double() {\n//   console.log(a * 2);\n// }\n\n// const a = 7;\n// double();\n\n// const double = function () {\n//   console.log(a * 2);\n// };\n\n//타이머 함수\n// setTimeout(함수, 시간): 일정 시간 후 함수 실행\n// setInterval(함수, 시간): 시간 간격마다 함수 실행\n// clearTimeout(): 설정된 Timeout 함수를 종료\n// clearInterval(): 설정된 Interval 함수를 종료\n\n// setTimeout(function () {\n//   console.log(\"sseul!\");\n// }, 3000);\n\n// const timer = setTimeout(() => {\n//   console.log(\"Sseul!\");\n// }, 3000);\n\n// const h1El = document.querySelector(\"h1\");\n// h1El.addEventListener(\"click\", () => {\n//   clearTimeout(timer);\n// });\n\n// 콜백\n// 함수의 인수로 사용되는 함수\n// 실행 위치를 보장하는 함수\n\n// function timeout(callback) {\n//   setTimeout(() => {\n//     console.log(\"Sseul\");\n//     callback()\n//   }, 3000);\n// }\n\n// timeout(()=>{\n//     console.log(\"Done\");\n// });\n\n//생성자 함수\n\n// const heropy = {\n//   firstName: \"Heropy\",\n//   lastName: \"Park\",\n//   getFullName: function () {\n//     return `${this.firstName} ${this.lastName}`;\n//   },\n// };\n\n// console.log(heropy);\n\n// function User(first, last) {\n//   this.firstName = first;\n//   this.lastName = last;\n// }\n\n// User.prototype.getFullName = function(){\n//   return `${this.firstName} ${this.lastName}`\n// }\n\n// const sseul = new User(\"sseul\", \"kim\");\n\n// console.log(sseul);\n\n//this\n// 일반(Normal)함수는 호출 위치에 따라 this 정의!\n// 화살표(Arrow)함수는 자신이 선언된 함수 범위에서 this 정의!\n\n// const sseul = {\n//   name: \"Sseul\",\n//   normal: function () {\n//     console.log(this.name);\n//   },\n//   arrow: () => {\n//     console.log(this.name);\n//   },\n// };\n\n// sseul.normal();\n// sseul.arrow();\n\n// const timer = {\n//   name: \"Sseul!!\",\n//   timeout: function () {\n//     setTimeout( () =>{\n//       console.log(this.name);\n//     }, 2000);\n//   },\n// };\n\n// timer.timeout();\n\n//ES6 Classes\n\n// class User {\n//   constructor(first, last) {\n//     this.firstName = first;\n//     this.lastName = last;\n//   }\n//   getFullName() {\n//     return `${this.firstName} ${this.lastName}`;\n//   }\n// }\n\n// const sseul = new User(\"Sseul\", \"Kim\");\n\n// console.log(sseul);\n// console.log(sseul.getFullName());\n\n//상속(확장)\n// class Vehicle{\n//   constructor(name, wheel) {\n//     this.name = name\n//     this.wheel = wheel\n//   }\n// }\n\n// const myVehicle = new Vehicle('운송수단', 2)\n// console.log(myVehicle)\n\n// class Bicycle extends Vehicle{\n//   constructor(name, wheel) {\n//     super(name, wheel)\n//   }\n// }\n\n// class Car extends Vehicle{\n//   constructor(name, wheel, license){\n//     super(name, wheel)\n//     this.license = license\n//   }\n// }\n"]}